repositories {
    flatDir {
        dirs "$rootProject.projectDir/libs"
    }
}

dependencies {
    // Libraries
    implementation("com.github.FiguraMC.LuaJ:luaj-core:$luaj-figura")
    implementation("com.github.FiguraMC.LuaJ:luaj-jse:$luaj-figura")
    implementation("com.neovisionaries:nv-websocket-client:$nv_websocket")

    // Test compile only is used to mount sources on an IDE without overriding vanilla classes with Optifine's
    testCompileOnly fileTree(dir: "$rootProject.projectDir/libs", include: '*.jar')
}

unimined.minecraft {
    legacyFabric {
        loader fabric_loader_version
    }

    defaultRemapJar = false
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "${project.archivesBaseName}-common-intermediary"
            version = project.version
            from components.java
        }
    }
    setupRepositories(repositories)
}

void setupRepositories(RepositoryHandler repositories) {
    if (project.hasProperty("mavenUrl")) {
        repositories.maven {
            name = "figuraMaven"
            url project.mavenUrl
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

processResources {
    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {
        expand buildProps
    }
}
