plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

archivesBaseName = "${rootProject.archives_base_name}-${version}-forge-mc"

configurations {
    shade
    implementation.extendsFrom shade
}


dependencies {
    // Libraries
    shade("com.github.FiguraMC.LuaJ:luaj-core:$luaj-figura")
    shade("com.github.FiguraMC.LuaJ:luaj-jse:$luaj-figura")
    shade("com.neovisionaries:nv-websocket-client:$nv_websocket")

    if (rootProject.run_with_geckolib == "true") {
      //  modImplementation("software.bernie.geckolib:geckolib-forge-$geckolib_version_forge")
    } else {
        //modCompileOnly("software.bernie.geckolib:geckolib-forge-$geckolib_version_forge")
    }

    implementation project(":common")
}

unimined.minecraft {
    minecraftForge {
        loader forge_version
        mixinConfig("${archives_base_name}-common.mixins.json", "${archives_base_name}.mixins.json")
    }
}

processResources {
   Map<String, Object> properties = new HashMap<>()

    properties.put("version", project.jarVersion)
    properties.put("java_version", rootProject.java_version)
    properties.put("minecraft_version", rootProject.minecraft_version)
    properties.put("assets_version", rootProject.assets_version)

    properties.forEach((k, v) -> inputs.property(k, v.toString()))
    filesMatching("META-INF/mods.toml") {
        expand properties
    }
}

compileTestJava.enabled = false

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}

shadowJar {
    archiveClassifier = ''
    configurations = [project.configurations.shade]
    finalizedBy 'reobfShadowJar'
}

assemble.dependsOn shadowJar

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "${project.archivesBaseName}-${project.name}"
            version = project.version
            from components.java
        }
    }
    setupRepositories(repositories)
}

void setupRepositories(RepositoryHandler repositories) {
    if (project.hasProperty("mavenUrl")) {
        repositories.maven {
            name = "figuraMaven"
            url project.mavenUrl
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}
